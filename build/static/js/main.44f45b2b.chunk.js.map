{"version":3,"sources":["BooksAPI.js","icons/noImg.png","components/ShelfChanger.js","components/Book.js","pages/BooksSearch.js","pages/BooksPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","ShelfChanger","state","handleChange","e","targetShelf","target","value","setState","props","onShelfChange","this","ShelfName","onChange","disabled","Component","Book","image","imageLinks","thumbnail","defaultBG","className","style","width","height","backgroundImage","backgroundSize","backgroundPosition","title","authors","map","name","key","BooksSearch","userInput","input","length","searchBooks","a","shelfBooks","searchResult","error","b","getShelfName","currentBook","shelfName","forEach","shelfBook","changShelf","to","type","placeholder","BooksPage","getShelfBooks","filter","changeShelf","currentState","concat","BooksApp","path","exact","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44f45b2b.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","export default __webpack_public_path__ + \"static/media/noImg.86e8f937.png\";","import React, { Component } from 'react'\n\nclass ShelfChanger extends Component{\n\n    state = {\n        shelf : ''\n    }\n\n    //Handle Shelf change\n    handleChange = (e) => {\n        const targetShelf = e.target.value\n        this.setState({\n            shelf: targetShelf\n        })\n        const book = {\n            ...this.props.book,\n            shelf: targetShelf\n        }\n\n        this.props.onShelfChange(book)\n    }\n\n    componentDidMount(){\n        this.setState({\n            shelf: this.props.ShelfName\n        })\n    }\n    render(){\n        return(\n            <select value={this.state.shelf} onChange={this.handleChange}>\n                <option value=\"move\" disabled>\n                    Move to...\n                </option>\n                <option value=\"currentlyReading\">\n                    Currently Reading\n                </option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n            </select>\n        )\n    }\n}\n\nexport default ShelfChanger","import React, { Component } from 'react'\nimport defaultBG from \"../icons/noImg.png\"\nimport ShelfChanger from './ShelfChanger'\n\n\nclass Book extends Component{\n\n    render(){\n        const book = this.props.book\n\n        const image =  book.imageLinks ? book.imageLinks.thumbnail : defaultBG\n\n        return(\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${image})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}>\n                        </div>\n                        <div className=\"book-shelf-changer\">\n                            <ShelfChanger onShelfChange={this.props.onShelfChange} ShelfName={book.shelf} book={book}/>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    {book.authors && book.authors.map(name =>(\n                        <div key={Math.random()} className=\"book-authors\">{name}</div>\n                    ))}\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Book","import React , {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { search , update , getAll} from '../BooksAPI'\nimport Book from '../components/Book'\n\nclass BooksSearch extends Component{\n\n  state = {\n    userInput : '',\n    books: []\n  }\n\n /**\n  * Update the input state and send the input to searchBooks()\n  */\n  handleChange = input => {\n    // empty books state when there is no input\n    input.length === 0 && this.setState({books: []})\n\n    this.setState({\n      userInput: input\n    })\n\n    input.length !== 0 && this.searchBooks(input)\n  }\n\n  /**\n   * Get Books data and update the state with the retrieved data\n   */\n  searchBooks =  async (input) =>{\n    const shelfBooks = await getAll()\n    const searchResult = await search(input)\n\n    if(searchResult.error){\n      this.setState({books: []})\n      return 0\n    }\n\n    this.setState({\n      books: searchResult.map(b => ({...b, shelf:this.getShelfName(shelfBooks, b)}))\n    })\n\n  }\n\n  getShelfName = (shelfBooks, currentBook) => {\n\n    let shelfName\n    \n    shelfBooks.forEach(shelfBook => {\n      if(shelfBook.id === currentBook.id){\n        shelfName = shelfBook.shelf\n      }\n    });\n\n    if(!shelfName) shelfName = 'none'\n\n    return shelfName\n  }\n\n\n  // Change Shelf in the Backend\n  changShelf = (book ) => {\n    update(book, book.shelf)\n  }\n\n  render(){\n      return(\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link className=\"close-search\" to='/'>Close</Link>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title or author\"\n                value = {this.state.userInput}\n                onChange = {(e) => this.handleChange(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n                  { this.state.books.length > 0 && this.state.userInput &&\n                    this.state.books.map(book => (\n                      < Book  key={book.id} book={book} onShelfChange={this.changShelf} />\n                    ))\n                  }\n            </ol>\n          </div>\n        </div>\n      )\n  }\n}\n\nexport default BooksSearch","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from '../components/Book'\nimport { getAll, update } from '../BooksAPI'\n\nclass BooksPage extends Component {\n\n    state = {\n        books : []\n    }\n\n    componentDidMount(){\n        getAll().then((res) => {\n            this.setState({\n                books: res\n            })\n        })\n    }\n\n    // Return books that matches the self key\n    getShelfBooks = (shelfName) => this.state.books.filter(book => book.shelf === shelfName)\n\n    // Change Book Shelf\n    changeShelf = (book) => {\n        // Update the backend\n        update(book, book.shelf)\n        book.shelf === 'none'\n            ? this.setState((currentState) => ({\n                books: currentState.books.filter((b) => b.id !== book.id)\n            }))\n            : this.setState(currentState => ({\n                books : currentState.books.filter((b) => b.id !== book.id).concat(book)\n            }))\n    }\n\n    render() {\n\n        const shelves = [\n            {\n                id: 'currentlyReading',\n                name: 'Currently Reading'\n            },{\n                id: 'wantToRead',\n                name: 'Want to Read',\n            },{\n                id: 'read',\n                name: 'Read'\n            }\n        ]\n\n\n        return (\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n\n                <div className=\"list-books-content\">\n                        {shelves.map(shelf => (\n                            <div className=\"bookshelf\" key={shelf.id}>\n                                <h2 className=\"bookshelf-title\">{shelf.name}</h2>\n\n                                <div className=\"bookshelf-books\">\n                                    <ol className=\"books-grid\">\n\n                                        {this.getShelfBooks(shelf.id).map(book => (\n                                            < Book key={book.id} book={book} onShelfChange={this.changeShelf}/>\n                                        ))}\n\n                                    </ol>\n                                    </div>\n                            </div>\n                        ))}\n                </div>\n\n                <div className=\"open-search\">\n                    <Link to=\"/search\">Add a book</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BooksPage;","import React from 'react'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport BooksSearch from './pages/BooksSearch'\nimport { Route } from 'react-router-dom'\nimport BooksPage from './pages/BooksPage'\n\nclass BooksApp extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        < Route path='/search'>\n          < BooksSearch />\n        </Route>\n        < Route exact path='/'>\n          < BooksPage />\n        </Route>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n    </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}